{
  "hash": "6372f30404ecfe1f9fcbff5e39c994c8",
  "result": {
    "markdown": "# Twitter Data Sharing\n\nIn this lesson, we're going to learn how to share Twitter data and access data shared by others with the Python/command line tool [twarc](https://twarc-project.readthedocs.io/en/latest/). We're specifically going to work with [twarc2](https://twarc-project.readthedocs.io/en/latest/twarc2/), which is designed for version 2 of the Twitter API (released in 2020) and the Academic Research track of the Twitter API (released in 2021).\n\nTwarc was developed by a project called [Documenting the Now](https://www.docnow.io/). The DocNow team develops tools and ethical frameworks for social media research.\n\n*This lesson presumes that you've already installed and configured twarc, which was covered in [a previous lesson](Twitter-API-Setup).*\n\n## Tweet IDs\n\nTwitter discourages developers and researchers from sharing full Twitter data openly on the web. They instead encourage developers and researchers to share *tweet IDs*:\n\n> [If you provide Twitter Content to third parties, including downloadable datasets or via an API, you may only distribute **Tweet IDs**, Direct Message IDs, and/or User IDs.](https://developer.twitter.com/en/developer-terms/policy#4-e)\n\nTweet IDs are unique identifiers assigned to every tweet. They look like a random string of numbers: 1189206626135355397. Each tweet ID can be used to download the full data associated with that tweet (if the tweet still exists). This is a process called \"hydration.\"\n\n<img src=\"https://cdn.pixabay.com/photo/2013/07/12/19/24/sapling-154734_960_720.png\" width=100% >\n\n**Hydration: a young tweet ID sprouts into a full tweet (to be read in David Attenborough's voice)**\n\nThere are actually two reasons that you might want to dehydrate tweets and/or hydrate tweet IDs: first, to responsibly share Twitter data with others and/or access Twitter data shared by others; second, to get more information about the Twitter data that you yourself collected.\n\nIf you collected tweets in real time, for example, you collected those tweets immediately after they were published, which means that they will not contain any retweet or favorite count information. Nobody's had time to retweet them yet! So if you'd like to retroactively get retweet and favorite count information about your tweets, then you would want to dehydrate and rehydrate them.\n\n## Dehydrate Tweets\n\n`twarc2 dehydrate tweets.jsonl > tweet_ids.txt`\n\nTo transform your Twitter data into a list of tweet IDs (so that you can share your data openly on the web), you can run the twarc command `twarc2 dehydrate` with the name of your JSONL file followed by the output operator `>` and the desired name of your tweet ID text file.\n\n> tweet ID —> tweet = hydration <br>\n> tweet ID <— tweet = dehydration\n\nLet's dehydrate the Twitter data that we collected about \"Infinite Jest\" from only verified Twitter accounts.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# !twarc2 dehydrate twitter-data/dfw_bro.jsonl > twitter-data/dfw_bro.txt\n```\n:::\n\n\nIf we `open()` and `.read()` the tweet IDs file that we just created, it looks something like this:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# tweet_ids = open(\"twitter-data/dfw_bro.txt\", encoding=\"utf-8\").read()\n```\n:::\n\n\n::: {.cell tags='[\"output_scroll\"]' execution_count=3}\n``` {.python .cell-code}\n# print(tweet_ids)\n```\n:::\n\n\n## Hydrate Tweets\n\n`twarc2 hydrate tweet_ids.txt > tweets.jsonl`\n\nTo transform a list of tweet IDs into full Twitter data, you can run the twarc command `twarc2 hydrate` with the name of your tweet IDs text file followed by the output operator `>` and the desired name of your JSONL file.\n\n> tweet ID —> tweet = hydration <br>\n> tweet ID <— tweet = dehydration\n\nNow let's re-hydrate the Twitter data that we collected a few weeks ago based on the tweet IDs that we just dehydrated.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# !twarc2 hydrate twitter-data/dfw_bro.txt > twitter-data/dfw_bro_REHYDRATED.jsonl\n```\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# tweet_json = open(\"twitter-data/dfw_bro_REHYDRATED.jsonl\", encoding=\"utf-8\").read()\n```\n:::\n\n\n::: {.cell tags='[\"output_scroll\"]' execution_count=6}\n``` {.python .cell-code}\n# print(tweet_json)\n```\n:::\n\n\n## Deleted Tweets & The Right To Be Forgotten\n\nWhat happens if someone decides to delete their tweet between the time when the tweet is first collected and the time when the tweet is \"hydrated\"? The deleted tweet will **not** be hydrated. The deleted tweet is no longer be accessible.\n\n## Where to Find Tweet IDs\n\nYou can find repositories of tweet IDs that have been shared by other researchers in the following places:\n\n- DocNow Catalog: https://catalog.docnow.io/\n\n- George Washington University Tweet IDs: https://dataverse.harvard.edu/dataverse/gwu-libraries\n\n",
    "supporting": [
      "21-Twitter-Data-Sharing_files"
    ],
    "filters": [],
    "includes": {}
  }
}
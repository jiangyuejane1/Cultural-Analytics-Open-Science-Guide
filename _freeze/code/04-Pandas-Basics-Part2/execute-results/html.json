{
  "hash": "6f43665c3167ee25c0c40e4ee12fa333",
  "result": {
    "markdown": "# Pandas Basics — Part 2\n\n*Note: You can explore the [associated workbook](https://mybinder.org/v2/gh/melaniewalsh/Intro-Cultural-Analytics/master?urlpath=lab/tree/book/03-Data-Analysis/workbooks/02.5-Pandas-Basics-Part2-WORKBOOK.ipynb) for this chapter in the cloud.*\n\nIn this lesson, we're going to introduce some more fundamentals of [Pandas](https://pandas.pydata.org/pandas-docs/stable/getting_started/overview.html), a powerful Python library for working with tabular data like CSV files.\n\nWe will review skills learned from the last lesson and introduce how to:\n\n* Broadly examine data\n* Work with missing data\n* Rename, drop, and add new columns\n* Perform mathematical calculations\n* Aggregate subsets of data\n* Make a simple time series\n\n___\n\n## Dataset\n### The Trans-Atlantic Slave Trade Database\n\n<blockquote class=\"epigraph\" style=\" padding: 10px\">\n\n[D]isplaying data alone could not and did not offer the atonement descendants of slaves\nsought or capture the inhumanity of this archive’s formation.\n\n-Jessica Marie Johnson, <a href=\"https://read.dukeupress.edu/social-text/article/36/4%20(137)/57/137032/Markup-BodiesBlack-Life-Studies-and-Slavery-Death\">“Markup Bodies”</a>\n\n</blockquote>\n\nThe dataset that we're going to be working with in this lesson is taken from [The Trans-Atlantic Slave Trade Database](https://www.slavevoyages.org/voyage/database), part of the [*Slave Voyages* project](https://www.slavevoyages.org/). The larger database includes information about 35,000 slave-trading voyages from 1514-1866. The dataset we're working with here was filtered to include the 20,000 voyages that landed in the Americas. The data was filtered to also include the percentage of enslaved men, women, and children on the voyages.\n\nWe're working with this data for a number of reasons. The *Slave Voyages* project is a major data-driven contribution to the history of slavery and to the field of the digital humanities. Before the Trans-Atlantic Slave Trade Database, as DH scholar Jessica Johnson [writes,](https://read.dukeupress.edu/social-text/article-abstract/36/4%20(137)/57/137032/Markup-BodiesBlack-Life-Studies-and-Slavery-Death?redirectedFrom=fulltext) \"historians assumed enslaved women and children played a negligible role in the slave trade.\" But evidence from the Trans-Atlantic Slave Trade Database suggested otherwise. \"The existence of the Trans-Atlantic Slave Trade Database immediately reshaped debates about numbers of women and children exported from the continent,\" Johnson says, \"influencing work on women in the slave trade on the African coast, slavery in African societies, and women in the slave trade to the Americas.\"\n\nThough the Trans-Atlantic Slave Trade Database helped shed new light on the roles of enslaved women and children, Johnson makes clear that it was not computation or data alone that shed this light: \n> [D]isplaying data alone could not and did not offer the atonement descendants of slaves sought or capture the inhumanity of this archive’s formation. Culling the lives of women and children from the data set required approaching the data with intention. It required a methodology attuned to black life and to dismantling the methods used to create the manifests in the first place, then designing and launching an interface responsive to the desire of descendants of slaves for reparation and redress.\n\nIn this spirit, we want to think about how responsible data analysis requires more than just data and technical tools like Pandas. It requires approaching data with intention and developing methodologies geared toward justice. This is especially necessary when dealing with data that records and perpetrates violence like the Trans-Atlantic Slave Trade Database.\n\n___\n\n**Import Pandas**\n\nTo use the Pandas library, we first need to `import` it.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:49:54.633206Z\",\"start_time\":\"2022-11-07T10:49:54.357619Z\"}' execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\n```\n:::\n\n\nThe above `import` statement not only imports the Pandas library but also gives it an alias or nickname — `pd`. This alias will save us from having to type out the entire words `pandas` each time we need to use it. Many Python libraries have commonly used aliases like `pd`.\n\n**Set Display Settings**\n\nBy default, Pandas will display 60 rows and 20 columns. I often change [Pandas' default display settings](https://pandas.pydata.org/pandas-docs/stable/user_guide/options.html) to show more rows or columns.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:49:55.199412Z\",\"start_time\":\"2022-11-07T10:49:55.193478Z\"}' execution_count=2}\n``` {.python .cell-code}\npd.options.display.max_rows = 100\n```\n:::\n\n\n**Read in CSV File**\n\n````{sidebar}\n```{tip} \nIf you use the `help()` function, you can see the documentation for almost any bit of code. If we run it on `pd.read_csv()`, we can see all the possible parameters that can be used with `pd.read_csv()`.\nhelp(pd.read_csv)\n```\n````\n\nTo read in a CSV file, we will use the function `pd.read_csv()` and insert the name of our desired file path. \n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:49:56.132792Z\",\"start_time\":\"2022-11-07T10:49:55.889617Z\"}' execution_count=3}\n``` {.python .cell-code}\nslave_voyages_df = pd.read_csv('../data/Trans-Atlantic-Slave-Trade_Americas.csv', delimiter=\",\", encoding='utf-8')\n```\n:::\n\n\nThis creates a Pandas [DataFrame object](https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html#DataFrame) — often abbreviated as *df*, e.g., *slave_voyages_df*. A DataFrame looks and acts a lot like a spreadsheet. But it has special powers and functions that we will discuss in the next few lessons.\n\nWhen reading in the CSV file, we also specified the `encoding` and `delimiter`. The `delimiter` specifies the character that separates or \"delimits\" the columns in our dataset. For CSV files, the delimiter will most often be a comma. (CSV is short for *Comma Separated Values*.) Sometimes, however, the delimiter of a CSV file might be a tab (`\\t`) or, more rarely, another character.\n\n**Display Data**\n\nWe can display a DataFrame in a Jupyter notebook simply by running a cell with the variable name of the DataFrame.\n\n<div class=\"admonition pandasreview\" name=\"html-admonition\" style=\"background: black; color: white; padding: 10px\">\n<p class=\"title\">Pandas Review</p>\n<code>NaN</code> is the Pandas value for any missing data. See <a href=\"https://pandas.pydata.org/pandas-docs/stable/user_guide/missing_data.html?highlight=nan/\">\"Working with missing data\"</a> for more information.\n      \n</div>\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:49:57.003352Z\",\"start_time\":\"2022-11-07T10:49:56.969215Z\"}' execution_count=4}\n``` {.python .cell-code}\nslave_voyages_df\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year_of_arrival</th>\n      <th>flag</th>\n      <th>place_of_purchase</th>\n      <th>place_of_landing</th>\n      <th>percent_women</th>\n      <th>percent_children</th>\n      <th>percent_men</th>\n      <th>total_embarked</th>\n      <th>total_disembarked</th>\n      <th>resistance_label</th>\n      <th>vessel_name</th>\n      <th>captain's_name</th>\n      <th>voyage_id</th>\n      <th>sources</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1520</td>\n      <td>NaN</td>\n      <td>Portuguese Guinea</td>\n      <td>San Juan</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>324.0</td>\n      <td>259.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>42987</td>\n      <td>[u'AGI,Patronato 175, r.9&lt;&gt;&lt;p&gt;&lt;em&gt;AG!&lt;/em&gt; (Se...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1525</td>\n      <td>Portugal / Brazil</td>\n      <td>Sao Tome</td>\n      <td>Hispaniola, unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td>S Maria de Bogoña</td>\n      <td>Monteiro, Pero</td>\n      <td>46473</td>\n      <td>[u'ANTT,CC,Parte II, maco 131, doc 54&lt;&gt;&lt;i&gt;Inst...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1526</td>\n      <td>Spain / Uruguay</td>\n      <td>Cape Verde Islands</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>Carega, Esteban (?)</td>\n      <td>11297</td>\n      <td>[u'Pike,60-1,172&lt;&gt;Pike, Ruth, &lt;i&gt;Enterprise&lt;/i...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1526</td>\n      <td>Spain / Uruguay</td>\n      <td>Cape Verde Islands</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>Carega, Esteban (?)</td>\n      <td>11298</td>\n      <td>[u'Pike,60-1,172&lt;&gt;Pike, Ruth, &lt;i&gt;Enterprise&lt;/i...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1526</td>\n      <td>NaN</td>\n      <td>Cape Verde Islands</td>\n      <td>Caribbean (colony unspecified)</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td>S Anton</td>\n      <td>Leon, Juan de</td>\n      <td>42631</td>\n      <td>[u'Chaunus, 3: 162-63&lt;&gt;&lt;p&gt;Chaunus, &lt;em&gt;xxxxxx&lt;...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>20736</th>\n      <td>1864</td>\n      <td>Spain / Uruguay</td>\n      <td>Africa., port unspecified</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>488.0</td>\n      <td>465.0</td>\n      <td>NaN</td>\n      <td>Polaca</td>\n      <td>NaN</td>\n      <td>46554</td>\n      <td>[u'AHNM, Ultramar, Leg. 3551, 6&lt;&gt;&lt;i&gt;Archivo Hi...</td>\n    </tr>\n    <tr>\n      <th>20737</th>\n      <td>1865</td>\n      <td>Spain / Uruguay</td>\n      <td>Africa., port unspecified</td>\n      <td>Isla de Pinas</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>152.0</td>\n      <td>145.0</td>\n      <td>Slave insurrection</td>\n      <td>Gato</td>\n      <td>NaN</td>\n      <td>4394</td>\n      <td>[u'IUP,ST,50/B/137&lt;&gt;Great Britain, &lt;i&gt;Irish Un...</td>\n    </tr>\n    <tr>\n      <th>20738</th>\n      <td>1865</td>\n      <td>NaN</td>\n      <td>Africa., port unspecified</td>\n      <td>Mariel</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>780.0</td>\n      <td>650.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>4395</td>\n      <td>[u'IUP,ST,50/B/144&lt;&gt;Great Britain, &lt;i&gt;Irish Un...</td>\n    </tr>\n    <tr>\n      <th>20739</th>\n      <td>1865</td>\n      <td>NaN</td>\n      <td>Congo River</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1265.0</td>\n      <td>1004.0</td>\n      <td>NaN</td>\n      <td>Cicerón</td>\n      <td>Mesquita</td>\n      <td>5052</td>\n      <td>[u'IUP,ST,50/A/23-4&lt;&gt;Great Britain, &lt;i&gt;Irish U...</td>\n    </tr>\n    <tr>\n      <th>20740</th>\n      <td>1866</td>\n      <td>NaN</td>\n      <td>Africa., port unspecified</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>851.0</td>\n      <td>700.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>4998</td>\n      <td>[u'IUP,ST,50/B/220&lt;&gt;Great Britain, &lt;i&gt;Irish Un...</td>\n    </tr>\n  </tbody>\n</table>\n<p>20741 rows × 14 columns</p>\n</div>\n```\n:::\n:::\n\n\nThere are a few important things to note about the DataFrame displayed here:\n\n* Index\n    * The bolded ascending numbers in the very left-hand column of the DataFrame is called the Pandas *Index*. You can select rows based on the Index.\n    * By default, the Index is a sequence of numbers starting with zero. However, you can change the Index to something else, such as one of the columns in your dataset.\n\n* Truncation\n    * The DataFrame is truncated, signaled by the ellipses in the middle `...` of every column.\n    * The DataFrame is truncated because we set our default display settings to 100 rows. Anything more than 100 rows will be truncated. To display all the rows, we would need to alter Pandas' default display settings yet again.\n\n* Rows x Columns\n    * Pandas reports how many rows and columns are in this dataset at the bottom of the output (20,741 x 14 columns).\n\n**Display First *n* Rows**\n\nTo look at the first *n* rows in a DataFrame, we can use a method called `.head()`.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:49:57.559974Z\",\"start_time\":\"2022-11-07T10:49:57.533402Z\"}' execution_count=5}\n``` {.python .cell-code}\nslave_voyages_df.head(10)\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year_of_arrival</th>\n      <th>flag</th>\n      <th>place_of_purchase</th>\n      <th>place_of_landing</th>\n      <th>percent_women</th>\n      <th>percent_children</th>\n      <th>percent_men</th>\n      <th>total_embarked</th>\n      <th>total_disembarked</th>\n      <th>resistance_label</th>\n      <th>vessel_name</th>\n      <th>captain's_name</th>\n      <th>voyage_id</th>\n      <th>sources</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1520</td>\n      <td>NaN</td>\n      <td>Portuguese Guinea</td>\n      <td>San Juan</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>324.0</td>\n      <td>259.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>42987</td>\n      <td>[u'AGI,Patronato 175, r.9&lt;&gt;&lt;p&gt;&lt;em&gt;AG!&lt;/em&gt; (Se...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1525</td>\n      <td>Portugal / Brazil</td>\n      <td>Sao Tome</td>\n      <td>Hispaniola, unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td>S Maria de Bogoña</td>\n      <td>Monteiro, Pero</td>\n      <td>46473</td>\n      <td>[u'ANTT,CC,Parte II, maco 131, doc 54&lt;&gt;&lt;i&gt;Inst...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1526</td>\n      <td>Spain / Uruguay</td>\n      <td>Cape Verde Islands</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>Carega, Esteban (?)</td>\n      <td>11297</td>\n      <td>[u'Pike,60-1,172&lt;&gt;Pike, Ruth, &lt;i&gt;Enterprise&lt;/i...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1526</td>\n      <td>Spain / Uruguay</td>\n      <td>Cape Verde Islands</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>Carega, Esteban (?)</td>\n      <td>11298</td>\n      <td>[u'Pike,60-1,172&lt;&gt;Pike, Ruth, &lt;i&gt;Enterprise&lt;/i...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1526</td>\n      <td>NaN</td>\n      <td>Cape Verde Islands</td>\n      <td>Caribbean (colony unspecified)</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td>S Anton</td>\n      <td>Leon, Juan de</td>\n      <td>42631</td>\n      <td>[u'Chaunus, 3: 162-63&lt;&gt;&lt;p&gt;Chaunus, &lt;em&gt;xxxxxx&lt;...</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1526</td>\n      <td>NaN</td>\n      <td>Cape Verde Islands</td>\n      <td>San Domingo (a) Santo Domingo</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td>Santa Maria de Guadalupe</td>\n      <td>Pabon, Francisco</td>\n      <td>42679</td>\n      <td>[u'Chaunus, 3: 162-63&lt;&gt;&lt;p&gt;Chaunus, &lt;em&gt;xxxxxx&lt;...</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1526</td>\n      <td>Portugal / Brazil</td>\n      <td>Sao Tome</td>\n      <td>Spanish Caribbean, unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>46474</td>\n      <td>[u'ANTT,CC,Parte II, maco 131, doc 54&lt;&gt;&lt;i&gt;Inst...</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1527</td>\n      <td>Spain / Uruguay</td>\n      <td>Cape Verde Islands</td>\n      <td>Puerto Rico, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>325.0</td>\n      <td>260.0</td>\n      <td>NaN</td>\n      <td>Concepción</td>\n      <td>Díaz, Alonso</td>\n      <td>99027</td>\n      <td>[u'SuedBadillo,57,75,76&lt;&gt;&lt;p&gt;SuedBadillo, &lt;em&gt;x...</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1532</td>\n      <td>Portugal / Brazil</td>\n      <td>Sao Tome</td>\n      <td>Spanish Caribbean, unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td>S Antônio</td>\n      <td>Afonso, Martim</td>\n      <td>11293</td>\n      <td>[u'Ryder,66&lt;&gt;Ryder, A. F. C., &lt;i&gt;Benin&lt;/i&gt;&lt;i&gt; ...</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1532</td>\n      <td>NaN</td>\n      <td>Cape Verde Islands</td>\n      <td>San Juan</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>25.0</td>\n      <td>20.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>de Illanes, Manuel</td>\n      <td>28994</td>\n      <td>[u'Tanodi, 321-22&lt;&gt;Tanodi, Aurelio, &lt;i&gt;Documen...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Examine Data\n\n### Shape\n\nTo explicitly check for how many rows vs columns make up a dataset, we can use the `.shape` method.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:49:58.285653Z\",\"start_time\":\"2022-11-07T10:49:58.278114Z\"}' execution_count=6}\n``` {.python .cell-code}\nslave_voyages_df.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\n(20741, 14)\n```\n:::\n:::\n\n\nThere are 20,741 rows and 14 columns.\n\n### Data Types\n\nJust like Python has different data types, Pandas has different data types, too. These data types are automatically assigned to columns when we read in a CSV file. We can check these Pandas data types with the [`.dtypes` method](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.dtypes.html).\n\n\n\n| **Pandas Data Type** |  **Explanation**                                                                                   |\n|:-------------:|:---------------------------------------------------------------------------------------------------:|\n| `object`         | string                                                                               |\n| `float64`         | float                                               |\n| `int64`       | integer                                                        |\n| `datetime64`       |  date time              \n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:49:59.205066Z\",\"start_time\":\"2022-11-07T10:49:59.194389Z\"}' execution_count=7}\n``` {.python .cell-code}\nslave_voyages_df.dtypes\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\nyear_of_arrival        int64\nflag                  object\nplace_of_purchase     object\nplace_of_landing      object\npercent_women        float64\npercent_children     float64\npercent_men          float64\ntotal_embarked       float64\ntotal_disembarked    float64\nresistance_label      object\nvessel_name           object\ncaptain's_name        object\nvoyage_id              int64\nsources               object\ndtype: object\n```\n:::\n:::\n\n\nIt's important to always check the data types in your DataFrame. For example, sometimes numeric values will accidentally be interpreted as a string object. To perform calculations on this data, you would need to first convert that column from a string to an integer.\n\n### Columns\n\nWe can also check the column names of the DataFrame with [`.columns`](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.columns.html)\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:49:59.930061Z\",\"start_time\":\"2022-11-07T10:49:59.921381Z\"}' execution_count=8}\n``` {.python .cell-code}\nslave_voyages_df.columns\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\nIndex(['year_of_arrival', 'flag', 'place_of_purchase', 'place_of_landing',\n       'percent_women', 'percent_children', 'percent_men', 'total_embarked',\n       'total_disembarked', 'resistance_label', 'vessel_name',\n       'captain's_name', 'voyage_id', 'sources'],\n      dtype='object')\n```\n:::\n:::\n\n\n### Summary Statistics\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:00.366069Z\",\"start_time\":\"2022-11-07T10:50:00.282965Z\"}' execution_count=9}\n``` {.python .cell-code}\nslave_voyages_df.describe(include='all')\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year_of_arrival</th>\n      <th>flag</th>\n      <th>place_of_purchase</th>\n      <th>place_of_landing</th>\n      <th>percent_women</th>\n      <th>percent_children</th>\n      <th>percent_men</th>\n      <th>total_embarked</th>\n      <th>total_disembarked</th>\n      <th>resistance_label</th>\n      <th>vessel_name</th>\n      <th>captain's_name</th>\n      <th>voyage_id</th>\n      <th>sources</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>20741.000000</td>\n      <td>19583</td>\n      <td>20663</td>\n      <td>20741</td>\n      <td>2894.000000</td>\n      <td>2927.000000</td>\n      <td>2894.000000</td>\n      <td>20722.000000</td>\n      <td>20719.000000</td>\n      <td>372</td>\n      <td>20741</td>\n      <td>19396</td>\n      <td>20741.000000</td>\n      <td>20741</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>NaN</td>\n      <td>8</td>\n      <td>156</td>\n      <td>187</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>6</td>\n      <td>5849</td>\n      <td>12233</td>\n      <td>NaN</td>\n      <td>13754</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>NaN</td>\n      <td>Great Britain</td>\n      <td>Africa., port unspecified</td>\n      <td>Barbados, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Slave insurrection</td>\n      <td></td>\n      <td>Smith, John</td>\n      <td>NaN</td>\n      <td>[u'mettas,I&lt;&gt;Mettas, Jean,  &lt;i&gt;R\\xe9pertoire d...</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>NaN</td>\n      <td>10536</td>\n      <td>5999</td>\n      <td>2038</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>330</td>\n      <td>712</td>\n      <td>36</td>\n      <td>NaN</td>\n      <td>1134</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1752.014850</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.274198</td>\n      <td>0.231582</td>\n      <td>0.496648</td>\n      <td>295.050381</td>\n      <td>251.573966</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>42783.741671</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>59.702189</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.116513</td>\n      <td>0.149508</td>\n      <td>0.140324</td>\n      <td>147.997690</td>\n      <td>128.050439</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>32401.785320</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1520.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>112.000000</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1724.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.195265</td>\n      <td>0.115380</td>\n      <td>0.407460</td>\n      <td>194.000000</td>\n      <td>163.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>17862.000000</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1765.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.264110</td>\n      <td>0.215100</td>\n      <td>0.497890</td>\n      <td>282.000000</td>\n      <td>241.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>31916.000000</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1792.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.346150</td>\n      <td>0.321900</td>\n      <td>0.586765</td>\n      <td>368.000000</td>\n      <td>313.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>78283.000000</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1866.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>2024.000000</td>\n      <td>1700.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>900206.000000</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Missing Data\n\n```{epigraph}\nThe conceit of the archive is that it is the repository of answers, of knowable conclusions, of the data needed to explain or understand the past.\n\nThe reality, however, is that the archive is the troubled genesis of our always-failed effort to unravel the effects of the past on the present; rather than verifiable truths, the archive — and its silences — house the very questions that unsettle us.\n\n-- Jennifer Morgan, [\"Accounting for 'The Most Excruciating Torment'\"](https://read.dukeupress.edu/history-of-the-present/article-abstract/6/2/184/153282/Accounting-for-The-Most-Excruciating-Torment?redirectedFrom=PDF)\n```\n\nResponsible data analysis requires understanding missing data. The Trans-Atlantic Slave Trade Database, as historian Jennifer Morgan [writes](https://read.dukeupress.edu/history-of-the-present/article-abstract/6/2/184/153282/Accounting-for-The-Most-Excruciating-Torment?redirectedFrom=PDF), contains innumerable \"silences\" and \"gaps.\" These silences include the thoughts, feelings, and experiences of the enslaved African people on board the voyages — silences that cannot be found in the database itself.\n\nThere are other kinds of silences and gaps that can be detected in the database itself, however. For example, while some of the voyages in the the Trans-Atlantic Slave Trade Database recorded information about how many enslaved women and children were aboard, most did not. Yet focusing on the data that is there and analyzing trends in the missing data can help shed light on the history of gender and enslavement. The fact that most ship captains did not record gender information, Morgan argues, helps tell us about their \"priorities\": \"[W]e can assume that had it been financially significant to have more men than women that data would have been more scrupulously recorded.\"\n\n### .isna() / .notna()\n\nPandas has special ways of dealing with missing data. As you may have already noticed, blank rows in a CSV file show up as `NaN` in a Pandas DataFrame.\n\nTo filter and count the number of missing/not missing values in a dataset, we can use the special `.isna()` and `.notna()` methods on a DataFrame or Series object.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:01.559817Z\",\"start_time\":\"2022-11-07T10:50:01.545873Z\"}' execution_count=10}\n``` {.python .cell-code}\nslave_voyages_df['percent_women'].notna()\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n0        False\n1        False\n2        False\n3        False\n4        False\n         ...  \n20736    False\n20737    False\n20738    False\n20739    False\n20740    False\nName: percent_women, Length: 20741, dtype: bool\n```\n:::\n:::\n\n\nThe `.isna()` and `.notna()` methods return True/False pairs for each row, which we can use to filter the DataFrame for any rows that have information in a given column. For example, we can filter the DataFrame for only rows that have information about the percentage of enslaved women aboard the voyage.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:01.961882Z\",\"start_time\":\"2022-11-07T10:50:01.932429Z\"}' execution_count=11}\n``` {.python .cell-code}\nslave_voyages_df[slave_voyages_df['percent_women'].notna()]\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year_of_arrival</th>\n      <th>flag</th>\n      <th>place_of_purchase</th>\n      <th>place_of_landing</th>\n      <th>percent_women</th>\n      <th>percent_children</th>\n      <th>percent_men</th>\n      <th>total_embarked</th>\n      <th>total_disembarked</th>\n      <th>resistance_label</th>\n      <th>vessel_name</th>\n      <th>captain's_name</th>\n      <th>voyage_id</th>\n      <th>sources</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>938</th>\n      <td>1613</td>\n      <td>Portugal / Brazil</td>\n      <td>Luanda</td>\n      <td>Santo Tomas</td>\n      <td>0.30556</td>\n      <td>0.20588</td>\n      <td>0.69444</td>\n      <td>362.0</td>\n      <td>290.0</td>\n      <td>NaN</td>\n      <td>NS de Nazareth</td>\n      <td>Gómez, Juan</td>\n      <td>47352</td>\n      <td>[u'AGI-Esc 38B, pieza 2, folios 427r-427v&lt;&gt;&lt;p&gt;...</td>\n    </tr>\n    <tr>\n      <th>1044</th>\n      <td>1619</td>\n      <td>Portugal / Brazil</td>\n      <td>Luanda</td>\n      <td>Veracruz</td>\n      <td>0.21127</td>\n      <td>0.21596</td>\n      <td>0.57277</td>\n      <td>349.0</td>\n      <td>279.0</td>\n      <td>NaN</td>\n      <td>S Antônio</td>\n      <td>Acosta, Jacome de</td>\n      <td>29248</td>\n      <td>[u'Vila Vilar,Cuadro3&lt;&gt;&lt;p&gt;Vila Vilar, Enriquet...</td>\n    </tr>\n    <tr>\n      <th>1115</th>\n      <td>1620</td>\n      <td>Portugal / Brazil</td>\n      <td>Luanda</td>\n      <td>Buenos Aires</td>\n      <td>0.13043</td>\n      <td>0.29193</td>\n      <td>0.57764</td>\n      <td>381.0</td>\n      <td>304.0</td>\n      <td>NaN</td>\n      <td>NS de Consolación</td>\n      <td>Acosta, Gonçalo</td>\n      <td>29561</td>\n      <td>[u'AGI, Indiferente General, 2795&lt;&gt;&lt;p&gt;&lt;em&gt;AG!&lt;...</td>\n    </tr>\n    <tr>\n      <th>1117</th>\n      <td>1620</td>\n      <td>NaN</td>\n      <td>Luanda</td>\n      <td>Cumana</td>\n      <td>0.29570</td>\n      <td>0.33571</td>\n      <td>0.70430</td>\n      <td>421.0</td>\n      <td>337.0</td>\n      <td>NaN</td>\n      <td>NS de Rocha</td>\n      <td>Sosa, Nicolás de&lt;br/&gt; Estéves, Domingo&lt;br/&gt; Ro...</td>\n      <td>29941</td>\n      <td>[u'AGI, Contratacion, 2881&lt;&gt;&lt;p&gt;&lt;em&gt;AG!&lt;/em&gt; (S...</td>\n    </tr>\n    <tr>\n      <th>1334</th>\n      <td>1628</td>\n      <td>Portugal / Brazil</td>\n      <td>West Central Africa and St. Helena, port unspe...</td>\n      <td>Spanish Circum-Caribbean,unspecified</td>\n      <td>0.16908</td>\n      <td>0.58454</td>\n      <td>0.24638</td>\n      <td>303.0</td>\n      <td>242.0</td>\n      <td>NaN</td>\n      <td>S Pedro</td>\n      <td>Silva, Jacinto da</td>\n      <td>29568</td>\n      <td>[u'AGI, Indiferente General, 2796&lt;&gt;&lt;p&gt;&lt;em&gt;AG!&lt;...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>20295</th>\n      <td>1841</td>\n      <td>Portugal / Brazil</td>\n      <td>Rio Pongo</td>\n      <td>Cuba, port unspecified</td>\n      <td>0.20548</td>\n      <td>0.21233</td>\n      <td>0.58219</td>\n      <td>324.0</td>\n      <td>292.0</td>\n      <td>NaN</td>\n      <td>Segunda Rosália</td>\n      <td>Peirano, Francisco</td>\n      <td>2078</td>\n      <td>[u'PP,1845,XLIX:593-633&lt;&gt;Great Britain, &lt;i&gt;Par...</td>\n    </tr>\n    <tr>\n      <th>20321</th>\n      <td>1841</td>\n      <td>Spain / Uruguay</td>\n      <td>Africa., port unspecified</td>\n      <td>Bahamas, port unspecified</td>\n      <td>0.15758</td>\n      <td>0.31548</td>\n      <td>0.53939</td>\n      <td>215.0</td>\n      <td>193.0</td>\n      <td>NaN</td>\n      <td>Trovadore</td>\n      <td>Velasea, de Bonita</td>\n      <td>5503</td>\n      <td>[u'Dalleo,24&lt;&gt;Dalleo, Peter D.,\"Africans in th...</td>\n    </tr>\n    <tr>\n      <th>20429</th>\n      <td>1850</td>\n      <td>NaN</td>\n      <td>Benguela</td>\n      <td>British Caribbean, colony unspecified</td>\n      <td>0.00000</td>\n      <td>1.00000</td>\n      <td>0.00000</td>\n      <td>94.0</td>\n      <td>74.0</td>\n      <td>NaN</td>\n      <td>Amélia</td>\n      <td>Oliveira, José</td>\n      <td>4674</td>\n      <td>[u'IUP,ST,38/A/208&lt;&gt;Great Britain, &lt;i&gt;Irish Un...</td>\n    </tr>\n    <tr>\n      <th>20498</th>\n      <td>1854</td>\n      <td>U.S.A.</td>\n      <td>Whydah</td>\n      <td>Bahia Honda</td>\n      <td>0.45455</td>\n      <td>0.08333</td>\n      <td>0.54545</td>\n      <td>600.0</td>\n      <td>584.0</td>\n      <td>NaN</td>\n      <td>Grey Eagle</td>\n      <td>Darnaud</td>\n      <td>4190</td>\n      <td>[u'FO84/965,Crawford,55.02.07,enc&lt;&gt;&lt;p&gt;&lt;em&gt;BNA&lt;...</td>\n    </tr>\n    <tr>\n      <th>20555</th>\n      <td>1857</td>\n      <td>NaN</td>\n      <td>Cabinda</td>\n      <td>Kingston</td>\n      <td>0.08943</td>\n      <td>0.00000</td>\n      <td>0.91057</td>\n      <td>500.0</td>\n      <td>362.0</td>\n      <td>NaN</td>\n      <td>Zeldina</td>\n      <td>NaN</td>\n      <td>4229</td>\n      <td>[u'IUP,ST,44/A/44,161&lt;&gt;Great Britain, &lt;i&gt;Irish...</td>\n    </tr>\n  </tbody>\n</table>\n<p>2894 rows × 14 columns</p>\n</div>\n```\n:::\n:::\n\n\nThe data is now filtered to only include the 2,894 rows with information about how many women were aboard the voyage.\n\nTo explicitly count the number of blank rows, we can use the `.value_counts()` method.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:02.325567Z\",\"start_time\":\"2022-11-07T10:50:02.312356Z\"}' execution_count=12}\n``` {.python .cell-code}\nslave_voyages_df['percent_women'].isna().value_counts()\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\nTrue     17847\nFalse     2894\nName: percent_women, dtype: int64\n```\n:::\n:::\n\n\nThere are 17,874 that do not contain information about the number of enslaved women on the voyage (`isna` = True) and 2,894 rows that do contain this information (`isna` = False).\n\nTo quickly transform these numbers into percentages, we can set the `normalize=` parameter to True.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:02.917896Z\",\"start_time\":\"2022-11-07T10:50:02.904696Z\"}' execution_count=13}\n``` {.python .cell-code}\nslave_voyages_df['percent_women'].isna().value_counts(normalize=True)\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\nTrue     0.86047\nFalse    0.13953\nName: percent_women, dtype: float64\n```\n:::\n:::\n\n\nAbout 14% of rows in this dataset have information about the number of enslaved women on the voyage while 86% do not.\n\n### .count()\n\nBecause the `.count()` method always excludes NaN values, we can also count the number of values in each column and divide by the total number of rows in each column (`len()`) to find the percentage of not blank data in every column.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:03.708720Z\",\"start_time\":\"2022-11-07T10:50:03.669193Z\"}' execution_count=14}\n``` {.python .cell-code}\nslave_voyages_df.count() / len(slave_voyages_df)\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```\nyear_of_arrival      1.000000\nflag                 0.944169\nplace_of_purchase    0.996239\nplace_of_landing     1.000000\npercent_women        0.139530\npercent_children     0.141121\npercent_men          0.139530\ntotal_embarked       0.999084\ntotal_disembarked    0.998939\nresistance_label     0.017935\nvessel_name          1.000000\ncaptain's_name       0.935153\nvoyage_id            1.000000\nsources              1.000000\ndtype: float64\n```\n:::\n:::\n\n\nFor example, 100% of the rows in the columns \"year_of_arrival\" contain information, while 2% of the rows in the column \"resistance_label\" contain information. The \"resistance_label\" indicates whether there is a record of the enslaved Africans aboard the voyage staging some form of resistance.\n\n### .fillna()\n\nIf we wanted, we could fill the `NaN` values in the DataFrame with a different value by using the `.fillna()` method.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:04.467426Z\",\"start_time\":\"2022-11-07T10:50:04.450040Z\"}' execution_count=15}\n``` {.python .cell-code}\nslave_voyages_df['percent_women'].fillna('no gender information recorded')\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\n0        no gender information recorded\n1        no gender information recorded\n2        no gender information recorded\n3        no gender information recorded\n4        no gender information recorded\n                      ...              \n20736    no gender information recorded\n20737    no gender information recorded\n20738    no gender information recorded\n20739    no gender information recorded\n20740    no gender information recorded\nName: percent_women, Length: 20741, dtype: object\n```\n:::\n:::\n\n\n## Rename Columns\n\nWe can rename columns with the [`.rename()` method](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.rename.html) and the `columns=` parameter. For example, we can rename the \"flag\" column \"national_affiliation.\"\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:05.037443Z\",\"start_time\":\"2022-11-07T10:50:05.008309Z\"}' execution_count=16}\n``` {.python .cell-code}\nslave_voyages_df.rename(columns={'flag': 'national_affiliation'})\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year_of_arrival</th>\n      <th>national_affiliation</th>\n      <th>place_of_purchase</th>\n      <th>place_of_landing</th>\n      <th>percent_women</th>\n      <th>percent_children</th>\n      <th>percent_men</th>\n      <th>total_embarked</th>\n      <th>total_disembarked</th>\n      <th>resistance_label</th>\n      <th>vessel_name</th>\n      <th>captain's_name</th>\n      <th>voyage_id</th>\n      <th>sources</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1520</td>\n      <td>NaN</td>\n      <td>Portuguese Guinea</td>\n      <td>San Juan</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>324.0</td>\n      <td>259.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>42987</td>\n      <td>[u'AGI,Patronato 175, r.9&lt;&gt;&lt;p&gt;&lt;em&gt;AG!&lt;/em&gt; (Se...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1525</td>\n      <td>Portugal / Brazil</td>\n      <td>Sao Tome</td>\n      <td>Hispaniola, unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td>S Maria de Bogoña</td>\n      <td>Monteiro, Pero</td>\n      <td>46473</td>\n      <td>[u'ANTT,CC,Parte II, maco 131, doc 54&lt;&gt;&lt;i&gt;Inst...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1526</td>\n      <td>Spain / Uruguay</td>\n      <td>Cape Verde Islands</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>Carega, Esteban (?)</td>\n      <td>11297</td>\n      <td>[u'Pike,60-1,172&lt;&gt;Pike, Ruth, &lt;i&gt;Enterprise&lt;/i...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1526</td>\n      <td>Spain / Uruguay</td>\n      <td>Cape Verde Islands</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>Carega, Esteban (?)</td>\n      <td>11298</td>\n      <td>[u'Pike,60-1,172&lt;&gt;Pike, Ruth, &lt;i&gt;Enterprise&lt;/i...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1526</td>\n      <td>NaN</td>\n      <td>Cape Verde Islands</td>\n      <td>Caribbean (colony unspecified)</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>359.0</td>\n      <td>287.0</td>\n      <td>NaN</td>\n      <td>S Anton</td>\n      <td>Leon, Juan de</td>\n      <td>42631</td>\n      <td>[u'Chaunus, 3: 162-63&lt;&gt;&lt;p&gt;Chaunus, &lt;em&gt;xxxxxx&lt;...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>20736</th>\n      <td>1864</td>\n      <td>Spain / Uruguay</td>\n      <td>Africa., port unspecified</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>488.0</td>\n      <td>465.0</td>\n      <td>NaN</td>\n      <td>Polaca</td>\n      <td>NaN</td>\n      <td>46554</td>\n      <td>[u'AHNM, Ultramar, Leg. 3551, 6&lt;&gt;&lt;i&gt;Archivo Hi...</td>\n    </tr>\n    <tr>\n      <th>20737</th>\n      <td>1865</td>\n      <td>Spain / Uruguay</td>\n      <td>Africa., port unspecified</td>\n      <td>Isla de Pinas</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>152.0</td>\n      <td>145.0</td>\n      <td>Slave insurrection</td>\n      <td>Gato</td>\n      <td>NaN</td>\n      <td>4394</td>\n      <td>[u'IUP,ST,50/B/137&lt;&gt;Great Britain, &lt;i&gt;Irish Un...</td>\n    </tr>\n    <tr>\n      <th>20738</th>\n      <td>1865</td>\n      <td>NaN</td>\n      <td>Africa., port unspecified</td>\n      <td>Mariel</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>780.0</td>\n      <td>650.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>4395</td>\n      <td>[u'IUP,ST,50/B/144&lt;&gt;Great Britain, &lt;i&gt;Irish Un...</td>\n    </tr>\n    <tr>\n      <th>20739</th>\n      <td>1865</td>\n      <td>NaN</td>\n      <td>Congo River</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1265.0</td>\n      <td>1004.0</td>\n      <td>NaN</td>\n      <td>Cicerón</td>\n      <td>Mesquita</td>\n      <td>5052</td>\n      <td>[u'IUP,ST,50/A/23-4&lt;&gt;Great Britain, &lt;i&gt;Irish U...</td>\n    </tr>\n    <tr>\n      <th>20740</th>\n      <td>1866</td>\n      <td>NaN</td>\n      <td>Africa., port unspecified</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>851.0</td>\n      <td>700.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>4998</td>\n      <td>[u'IUP,ST,50/B/220&lt;&gt;Great Britain, &lt;i&gt;Irish Un...</td>\n    </tr>\n  </tbody>\n</table>\n<p>20741 rows × 14 columns</p>\n</div>\n```\n:::\n:::\n\n\nRenaming the \"flag\" column as above will only momentarily change that column's name, however. If we display our DataFrame, we will see that the column name has *not* changed permamently.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:05.429602Z\",\"start_time\":\"2022-11-07T10:50:05.406912Z\"}' execution_count=17}\n``` {.python .cell-code}\nslave_voyages_df.head(1)\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year_of_arrival</th>\n      <th>flag</th>\n      <th>place_of_purchase</th>\n      <th>place_of_landing</th>\n      <th>percent_women</th>\n      <th>percent_children</th>\n      <th>percent_men</th>\n      <th>total_embarked</th>\n      <th>total_disembarked</th>\n      <th>resistance_label</th>\n      <th>vessel_name</th>\n      <th>captain's_name</th>\n      <th>voyage_id</th>\n      <th>sources</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1520</td>\n      <td>NaN</td>\n      <td>Portuguese Guinea</td>\n      <td>San Juan</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>324.0</td>\n      <td>259.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>42987</td>\n      <td>[u'AGI,Patronato 175, r.9&lt;&gt;&lt;p&gt;&lt;em&gt;AG!&lt;/em&gt; (Se...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nTo save changes in the DataFrame, we need to reassign the DataFrame to the same variable.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:05.795256Z\",\"start_time\":\"2022-11-07T10:50:05.786827Z\"}' execution_count=18}\n``` {.python .cell-code}\nslave_voyages_df = slave_voyages_df.rename(columns={'flag': 'national_affiliation'})\n```\n:::\n\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:06.004747Z\",\"start_time\":\"2022-11-07T10:50:05.982928Z\"}' execution_count=19}\n``` {.python .cell-code}\nslave_voyages_df.head(1)\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year_of_arrival</th>\n      <th>national_affiliation</th>\n      <th>place_of_purchase</th>\n      <th>place_of_landing</th>\n      <th>percent_women</th>\n      <th>percent_children</th>\n      <th>percent_men</th>\n      <th>total_embarked</th>\n      <th>total_disembarked</th>\n      <th>resistance_label</th>\n      <th>vessel_name</th>\n      <th>captain's_name</th>\n      <th>voyage_id</th>\n      <th>sources</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1520</td>\n      <td>NaN</td>\n      <td>Portuguese Guinea</td>\n      <td>San Juan</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>324.0</td>\n      <td>259.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>42987</td>\n      <td>[u'AGI,Patronato 175, r.9&lt;&gt;&lt;p&gt;&lt;em&gt;AG!&lt;/em&gt; (Se...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Drop Columns\n\nWe can remove a column from the DataFrame with the `.drop()` method and the column name.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:06.579677Z\",\"start_time\":\"2022-11-07T10:50:06.569303Z\"}' execution_count=20}\n``` {.python .cell-code}\nslave_voyages_df = slave_voyages_df.drop(columns=\"sources\")\n```\n:::\n\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:06.770625Z\",\"start_time\":\"2022-11-07T10:50:06.762211Z\"}' execution_count=21}\n``` {.python .cell-code}\nslave_voyages_df.columns\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```\nIndex(['year_of_arrival', 'national_affiliation', 'place_of_purchase',\n       'place_of_landing', 'percent_women', 'percent_children', 'percent_men',\n       'total_embarked', 'total_disembarked', 'resistance_label',\n       'vessel_name', 'captain's_name', 'voyage_id'],\n      dtype='object')\n```\n:::\n:::\n\n\n## Add Columns\n\nTo add a column, we simply put a new column name in square brackets and set it equal to whatever we want the new column to be.\n\nFor example, if we wanted to create new columns for the total women and men aboard each voyage, we could set them equal to the product of the \"total_disembarked\" column * the \"percent_women\" / \"percent_men\" columns.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:07.366811Z\",\"start_time\":\"2022-11-07T10:50:07.357870Z\"}' execution_count=22}\n``` {.python .cell-code}\nslave_voyages_df['total_women'] = slave_voyages_df['total_embarked'] * slave_voyages_df['percent_women']\n```\n:::\n\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:07.522636Z\",\"start_time\":\"2022-11-07T10:50:07.515283Z\"}' execution_count=23}\n``` {.python .cell-code}\nslave_voyages_df['total_men'] = slave_voyages_df['total_embarked'] * slave_voyages_df['percent_men']\n```\n:::\n\n\nIf we scroll all the way to the right side of the DataFrame, we can see that these columns have been added.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:07.937872Z\",\"start_time\":\"2022-11-07T10:50:07.915131Z\"}' execution_count=24}\n``` {.python .cell-code}\nslave_voyages_df.head(1)\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year_of_arrival</th>\n      <th>national_affiliation</th>\n      <th>place_of_purchase</th>\n      <th>place_of_landing</th>\n      <th>percent_women</th>\n      <th>percent_children</th>\n      <th>percent_men</th>\n      <th>total_embarked</th>\n      <th>total_disembarked</th>\n      <th>resistance_label</th>\n      <th>vessel_name</th>\n      <th>captain's_name</th>\n      <th>voyage_id</th>\n      <th>total_women</th>\n      <th>total_men</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1520</td>\n      <td>NaN</td>\n      <td>Portuguese Guinea</td>\n      <td>San Juan</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>324.0</td>\n      <td>259.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>42987</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Sort Columns\n\nWe can sort a DataFrame with the `.sort_values()` method, inside of which we include the parameter `by=` and indicate the name of the column we want to sort by (written in quotation marks).\n\nFor example, we can sort the DataFrame by the voyages that had the largest proportion of enslaved women aboard.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:08.536809Z\",\"start_time\":\"2022-11-07T10:50:08.502224Z\"}' execution_count=25}\n``` {.python .cell-code}\nslave_voyages_df.sort_values(by='percent_women', ascending=False)\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year_of_arrival</th>\n      <th>national_affiliation</th>\n      <th>place_of_purchase</th>\n      <th>place_of_landing</th>\n      <th>percent_women</th>\n      <th>percent_children</th>\n      <th>percent_men</th>\n      <th>total_embarked</th>\n      <th>total_disembarked</th>\n      <th>resistance_label</th>\n      <th>vessel_name</th>\n      <th>captain's_name</th>\n      <th>voyage_id</th>\n      <th>total_women</th>\n      <th>total_men</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>19042</th>\n      <td>1819</td>\n      <td>Spain / Uruguay</td>\n      <td>Luanda</td>\n      <td>Havana</td>\n      <td>1.00000</td>\n      <td>0.00000</td>\n      <td>0.00000</td>\n      <td>82.0</td>\n      <td>73.0</td>\n      <td>NaN</td>\n      <td>S José Diligente</td>\n      <td>Estepa</td>\n      <td>14378</td>\n      <td>82.00000</td>\n      <td>0.00000</td>\n    </tr>\n    <tr>\n      <th>4269</th>\n      <td>1715</td>\n      <td>France</td>\n      <td>Senegambia and offshore Atlantic, port unspeci...</td>\n      <td>Cap Francais</td>\n      <td>0.74747</td>\n      <td>0.16162</td>\n      <td>0.09091</td>\n      <td>120.0</td>\n      <td>118.0</td>\n      <td>NaN</td>\n      <td>Elisabeth</td>\n      <td>Beliveau</td>\n      <td>31883</td>\n      <td>89.69640</td>\n      <td>10.90920</td>\n    </tr>\n    <tr>\n      <th>1741</th>\n      <td>1659</td>\n      <td>Netherlands</td>\n      <td>Bonny</td>\n      <td>Jamaica, port unspecified</td>\n      <td>0.72500</td>\n      <td>0.05882</td>\n      <td>0.27500</td>\n      <td>195.0</td>\n      <td>85.0</td>\n      <td>NaN</td>\n      <td>S Jan</td>\n      <td>Veer, Adriaen Blaes van der</td>\n      <td>21566</td>\n      <td>141.37500</td>\n      <td>53.62500</td>\n    </tr>\n    <tr>\n      <th>19047</th>\n      <td>1819</td>\n      <td>Spain / Uruguay</td>\n      <td>Africa., port unspecified</td>\n      <td>Havana</td>\n      <td>0.71429</td>\n      <td>0.00000</td>\n      <td>0.28571</td>\n      <td>178.0</td>\n      <td>161.0</td>\n      <td>NaN</td>\n      <td>Descubridor</td>\n      <td>Benoit&lt;br/&gt; Valdes</td>\n      <td>14868</td>\n      <td>127.14362</td>\n      <td>50.85638</td>\n    </tr>\n    <tr>\n      <th>18950</th>\n      <td>1818</td>\n      <td>Spain / Uruguay</td>\n      <td>Africa., port unspecified</td>\n      <td>Havana</td>\n      <td>0.69355</td>\n      <td>0.30645</td>\n      <td>0.00000</td>\n      <td>69.0</td>\n      <td>62.0</td>\n      <td>NaN</td>\n      <td>Vencedor</td>\n      <td>Iturrondo</td>\n      <td>14857</td>\n      <td>47.85495</td>\n      <td>0.00000</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>20736</th>\n      <td>1864</td>\n      <td>Spain / Uruguay</td>\n      <td>Africa., port unspecified</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>488.0</td>\n      <td>465.0</td>\n      <td>NaN</td>\n      <td>Polaca</td>\n      <td>NaN</td>\n      <td>46554</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>20737</th>\n      <td>1865</td>\n      <td>Spain / Uruguay</td>\n      <td>Africa., port unspecified</td>\n      <td>Isla de Pinas</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>152.0</td>\n      <td>145.0</td>\n      <td>Slave insurrection</td>\n      <td>Gato</td>\n      <td>NaN</td>\n      <td>4394</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>20738</th>\n      <td>1865</td>\n      <td>NaN</td>\n      <td>Africa., port unspecified</td>\n      <td>Mariel</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>780.0</td>\n      <td>650.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>4395</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>20739</th>\n      <td>1865</td>\n      <td>NaN</td>\n      <td>Congo River</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1265.0</td>\n      <td>1004.0</td>\n      <td>NaN</td>\n      <td>Cicerón</td>\n      <td>Mesquita</td>\n      <td>5052</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>20740</th>\n      <td>1866</td>\n      <td>NaN</td>\n      <td>Africa., port unspecified</td>\n      <td>Cuba, port unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>851.0</td>\n      <td>700.0</td>\n      <td>NaN</td>\n      <td></td>\n      <td>NaN</td>\n      <td>4998</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>20741 rows × 15 columns</p>\n</div>\n```\n:::\n:::\n\n\nBy default, Pandas will sort in \"ascending\" order, from the smallest value to the largest value. If we want to sort the largest values first, we need to include another parameter `ascending=False`.\n\nBecause the DataFrame is truncated when it has more than 100 rows, we can use a Python list slice to view the top 30 (or any number less than 100) voyages with enslaved women aboard.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:09.372426Z\",\"start_time\":\"2022-11-07T10:50:09.331064Z\"}' tags='[\"output_scroll\"]' execution_count=26}\n``` {.python .cell-code}\nslave_voyages_df.sort_values(by='percent_women', ascending=False)[:30]\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year_of_arrival</th>\n      <th>national_affiliation</th>\n      <th>place_of_purchase</th>\n      <th>place_of_landing</th>\n      <th>percent_women</th>\n      <th>percent_children</th>\n      <th>percent_men</th>\n      <th>total_embarked</th>\n      <th>total_disembarked</th>\n      <th>resistance_label</th>\n      <th>vessel_name</th>\n      <th>captain's_name</th>\n      <th>voyage_id</th>\n      <th>total_women</th>\n      <th>total_men</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>19042</th>\n      <td>1819</td>\n      <td>Spain / Uruguay</td>\n      <td>Luanda</td>\n      <td>Havana</td>\n      <td>1.00000</td>\n      <td>0.00000</td>\n      <td>0.00000</td>\n      <td>82.0</td>\n      <td>73.0</td>\n      <td>NaN</td>\n      <td>S José Diligente</td>\n      <td>Estepa</td>\n      <td>14378</td>\n      <td>82.00000</td>\n      <td>0.00000</td>\n    </tr>\n    <tr>\n      <th>4269</th>\n      <td>1715</td>\n      <td>France</td>\n      <td>Senegambia and offshore Atlantic, port unspeci...</td>\n      <td>Cap Francais</td>\n      <td>0.74747</td>\n      <td>0.16162</td>\n      <td>0.09091</td>\n      <td>120.0</td>\n      <td>118.0</td>\n      <td>NaN</td>\n      <td>Elisabeth</td>\n      <td>Beliveau</td>\n      <td>31883</td>\n      <td>89.69640</td>\n      <td>10.90920</td>\n    </tr>\n    <tr>\n      <th>1741</th>\n      <td>1659</td>\n      <td>Netherlands</td>\n      <td>Bonny</td>\n      <td>Jamaica, port unspecified</td>\n      <td>0.72500</td>\n      <td>0.05882</td>\n      <td>0.27500</td>\n      <td>195.0</td>\n      <td>85.0</td>\n      <td>NaN</td>\n      <td>S Jan</td>\n      <td>Veer, Adriaen Blaes van der</td>\n      <td>21566</td>\n      <td>141.37500</td>\n      <td>53.62500</td>\n    </tr>\n    <tr>\n      <th>19047</th>\n      <td>1819</td>\n      <td>Spain / Uruguay</td>\n      <td>Africa., port unspecified</td>\n      <td>Havana</td>\n      <td>0.71429</td>\n      <td>0.00000</td>\n      <td>0.28571</td>\n      <td>178.0</td>\n      <td>161.0</td>\n      <td>NaN</td>\n      <td>Descubridor</td>\n      <td>Benoit&lt;br/&gt; Valdes</td>\n      <td>14868</td>\n      <td>127.14362</td>\n      <td>50.85638</td>\n    </tr>\n    <tr>\n      <th>18950</th>\n      <td>1818</td>\n      <td>Spain / Uruguay</td>\n      <td>Africa., port unspecified</td>\n      <td>Havana</td>\n      <td>0.69355</td>\n      <td>0.30645</td>\n      <td>0.00000</td>\n      <td>69.0</td>\n      <td>62.0</td>\n      <td>NaN</td>\n      <td>Vencedor</td>\n      <td>Iturrondo</td>\n      <td>14857</td>\n      <td>47.85495</td>\n      <td>0.00000</td>\n    </tr>\n    <tr>\n      <th>19037</th>\n      <td>1819</td>\n      <td>Spain / Uruguay</td>\n      <td>Ambriz</td>\n      <td>Havana</td>\n      <td>0.68456</td>\n      <td>0.00000</td>\n      <td>0.31544</td>\n      <td>164.0</td>\n      <td>149.0</td>\n      <td>NaN</td>\n      <td>Supremo Habanero</td>\n      <td>Blanco, Pedro</td>\n      <td>14372</td>\n      <td>112.26784</td>\n      <td>51.73216</td>\n    </tr>\n    <tr>\n      <th>4894</th>\n      <td>1721</td>\n      <td>France</td>\n      <td>Benin</td>\n      <td>Martinique, port unspecified</td>\n      <td>0.67797</td>\n      <td>0.15254</td>\n      <td>0.16949</td>\n      <td>69.0</td>\n      <td>59.0</td>\n      <td>NaN</td>\n      <td>Saint Jean Triomphant</td>\n      <td>Gaulart, J</td>\n      <td>33087</td>\n      <td>46.77993</td>\n      <td>11.69481</td>\n    </tr>\n    <tr>\n      <th>4150</th>\n      <td>1714</td>\n      <td>Great Britain</td>\n      <td>Calabar</td>\n      <td>Saint John (Antigua)</td>\n      <td>0.66667</td>\n      <td>0.16667</td>\n      <td>0.33333</td>\n      <td>360.0</td>\n      <td>240.0</td>\n      <td>NaN</td>\n      <td>Florida</td>\n      <td>Payne, Samuel</td>\n      <td>75489</td>\n      <td>240.00120</td>\n      <td>119.99880</td>\n    </tr>\n    <tr>\n      <th>6259</th>\n      <td>1734</td>\n      <td>Netherlands</td>\n      <td>Jacquin</td>\n      <td>Suriname</td>\n      <td>0.66480</td>\n      <td>0.09078</td>\n      <td>0.24441</td>\n      <td>716.0</td>\n      <td>374.0</td>\n      <td>NaN</td>\n      <td>Rusthof</td>\n      <td>Bovenmans, Anthony&lt;br/&gt; Theunissen, Willem</td>\n      <td>10278</td>\n      <td>475.99680</td>\n      <td>174.99756</td>\n    </tr>\n    <tr>\n      <th>1823</th>\n      <td>1664</td>\n      <td>Great Britain</td>\n      <td>New Calabar</td>\n      <td>Barbados, port unspecified</td>\n      <td>0.65217</td>\n      <td>0.08696</td>\n      <td>0.26087</td>\n      <td>242.0</td>\n      <td>168.0</td>\n      <td>NaN</td>\n      <td>Elizabeth</td>\n      <td>Francis, William</td>\n      <td>9558</td>\n      <td>157.82514</td>\n      <td>63.13054</td>\n    </tr>\n    <tr>\n      <th>1799</th>\n      <td>1663</td>\n      <td>Great Britain</td>\n      <td>Ardra</td>\n      <td>Barbados, port unspecified</td>\n      <td>0.64667</td>\n      <td>0.00000</td>\n      <td>0.35333</td>\n      <td>373.0</td>\n      <td>150.0</td>\n      <td>NaN</td>\n      <td>Blackamore</td>\n      <td>Bowles</td>\n      <td>9552</td>\n      <td>241.20791</td>\n      <td>131.79209</td>\n    </tr>\n    <tr>\n      <th>15471</th>\n      <td>1792</td>\n      <td>Great Britain</td>\n      <td>Calabar</td>\n      <td>Grenada, port unspecified</td>\n      <td>0.64646</td>\n      <td>0.06965</td>\n      <td>0.29798</td>\n      <td>200.0</td>\n      <td>135.0</td>\n      <td>NaN</td>\n      <td>Fame</td>\n      <td>Jenkins, William</td>\n      <td>18138</td>\n      <td>129.29200</td>\n      <td>59.59600</td>\n    </tr>\n    <tr>\n      <th>1824</th>\n      <td>1664</td>\n      <td>Great Britain</td>\n      <td>Bight of Biafra and Gulf of Guinea Islands, po...</td>\n      <td>Jamaica, port unspecified</td>\n      <td>0.64324</td>\n      <td>0.12973</td>\n      <td>0.22703</td>\n      <td>267.0</td>\n      <td>185.0</td>\n      <td>NaN</td>\n      <td>Allepine</td>\n      <td>Thwaites, William</td>\n      <td>9559</td>\n      <td>171.74508</td>\n      <td>60.61701</td>\n    </tr>\n    <tr>\n      <th>5049</th>\n      <td>1723</td>\n      <td>Great Britain</td>\n      <td>Cabinda</td>\n      <td>Jamaica, port unspecified</td>\n      <td>0.64141</td>\n      <td>0.26768</td>\n      <td>0.09091</td>\n      <td>201.0</td>\n      <td>198.0</td>\n      <td>NaN</td>\n      <td>Royal African Packet</td>\n      <td>Cornwell, Henry</td>\n      <td>76460</td>\n      <td>128.92341</td>\n      <td>18.27291</td>\n    </tr>\n    <tr>\n      <th>2151</th>\n      <td>1677</td>\n      <td>Great Britain</td>\n      <td>Calabar</td>\n      <td>Barbados, port unspecified</td>\n      <td>0.63816</td>\n      <td>0.03289</td>\n      <td>0.32895</td>\n      <td>219.0</td>\n      <td>152.0</td>\n      <td>NaN</td>\n      <td>Lenox</td>\n      <td>Wilkins, Amos</td>\n      <td>9980</td>\n      <td>139.75704</td>\n      <td>72.04005</td>\n    </tr>\n    <tr>\n      <th>17618</th>\n      <td>1804</td>\n      <td>Spain / Uruguay</td>\n      <td>Africa., port unspecified</td>\n      <td>Buenos Aires</td>\n      <td>0.63333</td>\n      <td>0.05000</td>\n      <td>0.31667</td>\n      <td>160.0</td>\n      <td>81.0</td>\n      <td>NaN</td>\n      <td>S Ana</td>\n      <td>Amaro, Rodriguez de Oliveira</td>\n      <td>96099</td>\n      <td>101.33280</td>\n      <td>50.66720</td>\n    </tr>\n    <tr>\n      <th>19040</th>\n      <td>1819</td>\n      <td>Spain / Uruguay</td>\n      <td>Luanda</td>\n      <td>Havana</td>\n      <td>0.62201</td>\n      <td>0.00000</td>\n      <td>0.37799</td>\n      <td>219.0</td>\n      <td>209.0</td>\n      <td>NaN</td>\n      <td>Clarita</td>\n      <td>Carballo, Alberto</td>\n      <td>14375</td>\n      <td>136.22019</td>\n      <td>82.77981</td>\n    </tr>\n    <tr>\n      <th>2318</th>\n      <td>1681</td>\n      <td>Great Britain</td>\n      <td>Gold Coast, port unspecified</td>\n      <td>Jamaica, port unspecified</td>\n      <td>0.62048</td>\n      <td>0.07831</td>\n      <td>0.30120</td>\n      <td>400.0</td>\n      <td>170.0</td>\n      <td>NaN</td>\n      <td>African</td>\n      <td>Mingham, John</td>\n      <td>9918</td>\n      <td>248.19200</td>\n      <td>120.48000</td>\n    </tr>\n    <tr>\n      <th>4364</th>\n      <td>1716</td>\n      <td>France</td>\n      <td>Goree</td>\n      <td>Leogane</td>\n      <td>0.62025</td>\n      <td>0.20736</td>\n      <td>0.37975</td>\n      <td>411.0</td>\n      <td>402.0</td>\n      <td>NaN</td>\n      <td>Duc d'Orléans</td>\n      <td>Villers, Chevalier de</td>\n      <td>31886</td>\n      <td>254.92275</td>\n      <td>156.07725</td>\n    </tr>\n    <tr>\n      <th>5259</th>\n      <td>1725</td>\n      <td>France</td>\n      <td>Senegambia and offshore Atlantic, port unspeci...</td>\n      <td>Cap Francais</td>\n      <td>0.61353</td>\n      <td>0.05314</td>\n      <td>0.33333</td>\n      <td>210.0</td>\n      <td>207.0</td>\n      <td>NaN</td>\n      <td>Prothée</td>\n      <td>Hantier, J</td>\n      <td>32873</td>\n      <td>128.84130</td>\n      <td>69.99930</td>\n    </tr>\n    <tr>\n      <th>4773</th>\n      <td>1720</td>\n      <td>France</td>\n      <td>Formosa</td>\n      <td>Martinique, port unspecified</td>\n      <td>0.61207</td>\n      <td>0.25862</td>\n      <td>0.12931</td>\n      <td>215.0</td>\n      <td>176.0</td>\n      <td>Slave insurrection</td>\n      <td>Don de Dieu</td>\n      <td>Masson Du Bocage, Guillaume</td>\n      <td>33119</td>\n      <td>131.59505</td>\n      <td>27.80165</td>\n    </tr>\n    <tr>\n      <th>2591</th>\n      <td>1686</td>\n      <td>Great Britain</td>\n      <td>New Calabar</td>\n      <td>Newcastle (Nevis)</td>\n      <td>0.60656</td>\n      <td>0.14754</td>\n      <td>0.24590</td>\n      <td>267.0</td>\n      <td>111.0</td>\n      <td>NaN</td>\n      <td>Francis</td>\n      <td>Wimple, Ralph</td>\n      <td>9838</td>\n      <td>161.95152</td>\n      <td>65.65530</td>\n    </tr>\n    <tr>\n      <th>2182</th>\n      <td>1678</td>\n      <td>Great Britain</td>\n      <td>Calabar</td>\n      <td>Jamaica, port unspecified</td>\n      <td>0.60526</td>\n      <td>0.04605</td>\n      <td>0.34868</td>\n      <td>219.0</td>\n      <td>152.0</td>\n      <td>NaN</td>\n      <td>Vine</td>\n      <td>Coleman, John</td>\n      <td>9987</td>\n      <td>132.55194</td>\n      <td>76.36092</td>\n    </tr>\n    <tr>\n      <th>5543</th>\n      <td>1727</td>\n      <td>Great Britain</td>\n      <td>Africa., port unspecified</td>\n      <td>Rappahannock</td>\n      <td>0.60440</td>\n      <td>0.35000</td>\n      <td>0.39560</td>\n      <td>161.0</td>\n      <td>140.0</td>\n      <td>NaN</td>\n      <td>John and Betty</td>\n      <td>Denton, William</td>\n      <td>92352</td>\n      <td>97.30840</td>\n      <td>63.69160</td>\n    </tr>\n    <tr>\n      <th>2540</th>\n      <td>1685</td>\n      <td>Great Britain</td>\n      <td>Cape Coast Castle</td>\n      <td>Jamaica, port unspecified</td>\n      <td>0.59917</td>\n      <td>0.00000</td>\n      <td>0.40083</td>\n      <td>310.0</td>\n      <td>242.0</td>\n      <td>NaN</td>\n      <td>Jefferie</td>\n      <td>Daile, Benjamin</td>\n      <td>9669</td>\n      <td>185.74270</td>\n      <td>124.25730</td>\n    </tr>\n    <tr>\n      <th>4736</th>\n      <td>1719</td>\n      <td>France</td>\n      <td>Africa., port unspecified</td>\n      <td>Cayenne</td>\n      <td>0.59524</td>\n      <td>0.16667</td>\n      <td>0.23810</td>\n      <td>52.0</td>\n      <td>42.0</td>\n      <td>NaN</td>\n      <td>Fidèle</td>\n      <td>Bonneau, Jean</td>\n      <td>30111</td>\n      <td>30.95248</td>\n      <td>12.38120</td>\n    </tr>\n    <tr>\n      <th>2327</th>\n      <td>1681</td>\n      <td>Great Britain</td>\n      <td>New Calabar</td>\n      <td>Barbados, port unspecified</td>\n      <td>0.59231</td>\n      <td>0.06923</td>\n      <td>0.33846</td>\n      <td>232.0</td>\n      <td>130.0</td>\n      <td>NaN</td>\n      <td>Hope</td>\n      <td>Grible, John</td>\n      <td>9927</td>\n      <td>137.41592</td>\n      <td>78.52272</td>\n    </tr>\n    <tr>\n      <th>2377</th>\n      <td>1682</td>\n      <td>Great Britain</td>\n      <td>Calabar</td>\n      <td>Jamaica, port unspecified</td>\n      <td>0.58879</td>\n      <td>0.08411</td>\n      <td>0.32710</td>\n      <td>164.0</td>\n      <td>114.0</td>\n      <td>NaN</td>\n      <td>Arthur</td>\n      <td>Penny, George</td>\n      <td>9898</td>\n      <td>96.56156</td>\n      <td>53.64440</td>\n    </tr>\n    <tr>\n      <th>2376</th>\n      <td>1682</td>\n      <td>Great Britain</td>\n      <td>Calabar</td>\n      <td>Newcastle (Nevis)</td>\n      <td>0.58696</td>\n      <td>0.11957</td>\n      <td>0.29348</td>\n      <td>146.0</td>\n      <td>119.0</td>\n      <td>NaN</td>\n      <td>Eaglet</td>\n      <td>Waugh, John</td>\n      <td>9896</td>\n      <td>85.69616</td>\n      <td>42.84808</td>\n    </tr>\n    <tr>\n      <th>1833</th>\n      <td>1664</td>\n      <td>Great Britain</td>\n      <td>Calabar</td>\n      <td>Barbados, port unspecified</td>\n      <td>0.58549</td>\n      <td>0.15544</td>\n      <td>0.25907</td>\n      <td>278.0</td>\n      <td>193.0</td>\n      <td>NaN</td>\n      <td>Success</td>\n      <td>Duke, Abraham</td>\n      <td>9584</td>\n      <td>162.76622</td>\n      <td>72.02146</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nIf we want to sort a Series object, we don't need to use the `by=` paramter.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:09.741728Z\",\"start_time\":\"2022-11-07T10:50:09.729231Z\"}' execution_count=27}\n``` {.python .cell-code}\nslave_voyages_df['total_women'].sort_values(ascending=False)\n```\n\n::: {.cell-output .cell-output-display execution_count=27}\n```\n6259     475.996800\n18822    316.640164\n2264     311.833480\n6163     303.000180\n3129     301.764000\n            ...    \n20736           NaN\n20737           NaN\n20738           NaN\n20739           NaN\n20740           NaN\nName: total_women, Length: 20741, dtype: float64\n```\n:::\n:::\n\n\n## Calculate Columns\n\nWe can do different calculations on columns with built-in Pandas functions. These calculations will ignore `NaN` values.\n\n| Pandas calculations | Explanation                         |\n|----------|-------------------------------------|\n| `.count()`    | Number of observations    |\n| `.sum()`      | Sum of values                       |\n| `.mean()`     | Mean of values                      |\n| `.median()`   | Median of values         |\n| `.min()`      | Minimum                             |\n| `.max()`      | Maximum                             |\n| `.mode()`     | Mode                                |\n| `.std()`      | Unbiased standard deviation         |\n\n\nFor example, to find the average proprotion of enslaved women aboard the voyages (for voyages that have this information), we can use the `.mean()` method.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:10.738004Z\",\"start_time\":\"2022-11-07T10:50:10.729085Z\"}' execution_count=28}\n``` {.python .cell-code}\nslave_voyages_df['percent_women'].mean()\n```\n\n::: {.cell-output .cell-output-display execution_count=28}\n```\n0.27419760653973696\n```\n:::\n:::\n\n\nThere were on average 27% enslaved women aboard the voyages for voyages that recorded this information.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:11.138504Z\",\"start_time\":\"2022-11-07T10:50:11.128920Z\"}' execution_count=29}\n``` {.python .cell-code}\nslave_voyages_df['percent_women'].max()\n```\n\n::: {.cell-output .cell-output-display execution_count=29}\n```\n1.0\n```\n:::\n:::\n\n\nThe highest percentage of women aboard the slave voyages was 100%. We can use this calculation as a filter to identify the voyage(s) with this maximum value.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:11.546650Z\",\"start_time\":\"2022-11-07T10:50:11.519666Z\"}' execution_count=30}\n``` {.python .cell-code}\nslave_voyages_df[slave_voyages_df['percent_women'] == slave_voyages_df['percent_women'].max()]\n```\n\n::: {.cell-output .cell-output-display execution_count=30}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year_of_arrival</th>\n      <th>national_affiliation</th>\n      <th>place_of_purchase</th>\n      <th>place_of_landing</th>\n      <th>percent_women</th>\n      <th>percent_children</th>\n      <th>percent_men</th>\n      <th>total_embarked</th>\n      <th>total_disembarked</th>\n      <th>resistance_label</th>\n      <th>vessel_name</th>\n      <th>captain's_name</th>\n      <th>voyage_id</th>\n      <th>total_women</th>\n      <th>total_men</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>19042</th>\n      <td>1819</td>\n      <td>Spain / Uruguay</td>\n      <td>Luanda</td>\n      <td>Havana</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>82.0</td>\n      <td>73.0</td>\n      <td>NaN</td>\n      <td>S José Diligente</td>\n      <td>Estepa</td>\n      <td>14378</td>\n      <td>82.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nAccording to the Trans-Atlantic Slave Trade Database, the 1819 voyage of the S José Diligente had 100% enslaved women aboard.\n\nAs demonstrated previously, we can also perform calculations with columns themselves.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:12.176341Z\",\"start_time\":\"2022-11-07T10:50:12.164922Z\"}' execution_count=31}\n``` {.python .cell-code}\n(slave_voyages_df['total_embarked'] * slave_voyages_df['percent_women']).max()\n```\n\n::: {.cell-output .cell-output-display execution_count=31}\n```\n475.99679999999995\n```\n:::\n:::\n\n\n## Groupby Columns\n\nThe Pandas function`.groupby()` allows us to group data and perform calculations on the groups.\n\nFor example, Jennifer Morgan writes about how some nations recorded more information about the gender of the enslaved people aboard their voyages than other nations did. To see the breakdown of gender information by nation, we can use a `.groupby()` function.\n\nThe first step to using groupby is to type the name of the DataFrame followed by `.groupby()` with the column we'd like to aggregate based on, such as \"national_affiliation.\"\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:12.768822Z\",\"start_time\":\"2022-11-07T10:50:12.758338Z\"}' execution_count=32}\n``` {.python .cell-code}\nslave_voyages_df.groupby('national_affiliation')\n```\n\n::: {.cell-output .cell-output-display execution_count=32}\n```\n<pandas.core.groupby.generic.DataFrameGroupBy object at 0x7feb444230d0>\n```\n:::\n:::\n\n\nThis action will created a [GroupBy object](https://pandas.pydata.org/pandas-docs/stable/user_guide/groupby.html). We can perform calculations on this grouped data, such as counting the number of non-blank values in each column for each nation.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:13.208920Z\",\"start_time\":\"2022-11-07T10:50:13.167697Z\"}' tags='[\"full-width\"]' execution_count=33}\n``` {.python .cell-code}\nslave_voyages_df.groupby('national_affiliation').count()\n```\n\n::: {.cell-output .cell-output-display execution_count=33}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year_of_arrival</th>\n      <th>place_of_purchase</th>\n      <th>place_of_landing</th>\n      <th>percent_women</th>\n      <th>percent_children</th>\n      <th>percent_men</th>\n      <th>total_embarked</th>\n      <th>total_disembarked</th>\n      <th>resistance_label</th>\n      <th>vessel_name</th>\n      <th>captain's_name</th>\n      <th>voyage_id</th>\n      <th>total_women</th>\n      <th>total_men</th>\n    </tr>\n    <tr>\n      <th>national_affiliation</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Denmark / Baltic</th>\n      <td>290</td>\n      <td>290</td>\n      <td>290</td>\n      <td>119</td>\n      <td>119</td>\n      <td>119</td>\n      <td>290</td>\n      <td>290</td>\n      <td>8</td>\n      <td>290</td>\n      <td>163</td>\n      <td>290</td>\n      <td>119</td>\n      <td>119</td>\n    </tr>\n    <tr>\n      <th>France</th>\n      <td>3381</td>\n      <td>3377</td>\n      <td>3381</td>\n      <td>708</td>\n      <td>709</td>\n      <td>708</td>\n      <td>3381</td>\n      <td>3381</td>\n      <td>121</td>\n      <td>3381</td>\n      <td>3289</td>\n      <td>3381</td>\n      <td>708</td>\n      <td>708</td>\n    </tr>\n    <tr>\n      <th>Great Britain</th>\n      <td>10536</td>\n      <td>10530</td>\n      <td>10536</td>\n      <td>1123</td>\n      <td>1151</td>\n      <td>1123</td>\n      <td>10526</td>\n      <td>10525</td>\n      <td>152</td>\n      <td>10536</td>\n      <td>10226</td>\n      <td>10536</td>\n      <td>1123</td>\n      <td>1123</td>\n    </tr>\n    <tr>\n      <th>Netherlands</th>\n      <td>1389</td>\n      <td>1341</td>\n      <td>1389</td>\n      <td>200</td>\n      <td>201</td>\n      <td>200</td>\n      <td>1387</td>\n      <td>1387</td>\n      <td>51</td>\n      <td>1389</td>\n      <td>1316</td>\n      <td>1389</td>\n      <td>200</td>\n      <td>200</td>\n    </tr>\n    <tr>\n      <th>Other</th>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>4</td>\n      <td>4</td>\n      <td>0</td>\n      <td>4</td>\n      <td>2</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>Portugal / Brazil</th>\n      <td>1009</td>\n      <td>1009</td>\n      <td>1009</td>\n      <td>42</td>\n      <td>48</td>\n      <td>42</td>\n      <td>1009</td>\n      <td>1009</td>\n      <td>0</td>\n      <td>1009</td>\n      <td>874</td>\n      <td>1009</td>\n      <td>42</td>\n      <td>42</td>\n    </tr>\n    <tr>\n      <th>Spain / Uruguay</th>\n      <td>1528</td>\n      <td>1524</td>\n      <td>1528</td>\n      <td>468</td>\n      <td>465</td>\n      <td>468</td>\n      <td>1528</td>\n      <td>1528</td>\n      <td>4</td>\n      <td>1528</td>\n      <td>1323</td>\n      <td>1528</td>\n      <td>468</td>\n      <td>468</td>\n    </tr>\n    <tr>\n      <th>U.S.A.</th>\n      <td>1446</td>\n      <td>1436</td>\n      <td>1446</td>\n      <td>223</td>\n      <td>223</td>\n      <td>223</td>\n      <td>1443</td>\n      <td>1442</td>\n      <td>31</td>\n      <td>1446</td>\n      <td>1283</td>\n      <td>1446</td>\n      <td>223</td>\n      <td>223</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n```{sidebar} On England's Slave Ship Records\n> For example, patterns emerge that suggest that English slave ship captains provided the most data related to the age or sex characteristics of the captives they transported and sold into slavery...The degree to which the practice of recording the sex of the passengers on board accords to national origin raises some interesting questions about the possible correlations between certain notational and national presumptions of accountability.\n\n-Jennifer Morgan, [\"Accounting for 'The Most Excruciating Torment'\"](https://read.dukeupress.edu/history-of-the-present/article-abstract/6/2/184/153282/Accounting-for-The-Most-Excruciating-Torment?redirectedFrom=PDF)\n```\n\nWe can also isolate only the \"percent_women\" column.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:13.838502Z\",\"start_time\":\"2022-11-07T10:50:13.803959Z\"}' execution_count=34}\n``` {.python .cell-code}\nslave_voyages_df.groupby('national_affiliation').count()['percent_women']\n```\n\n::: {.cell-output .cell-output-display execution_count=34}\n```\nnational_affiliation\nDenmark / Baltic      119\nFrance                708\nGreat Britain        1123\nNetherlands           200\nOther                   0\nPortugal / Brazil      42\nSpain / Uruguay       468\nU.S.A.                223\nName: percent_women, dtype: int64\n```\n:::\n:::\n\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:14.040426Z\",\"start_time\":\"2022-11-07T10:50:14.022431Z\"}' execution_count=35}\n``` {.python .cell-code}\nslave_voyages_df.groupby('national_affiliation')['percent_women'].count().sort_values(ascending=False)\n```\n\n::: {.cell-output .cell-output-display execution_count=35}\n```\nnational_affiliation\nGreat Britain        1123\nFrance                708\nSpain / Uruguay       468\nU.S.A.                223\nNetherlands           200\nDenmark / Baltic      119\nPortugal / Brazil      42\nOther                   0\nName: percent_women, dtype: int64\n```\n:::\n:::\n\n\n```{margin} Line Breaks\nIf a line of code gets too long, you can create a line break with a backslash `\\`\n```\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:15.290278Z\",\"start_time\":\"2022-11-07T10:50:14.413970Z\"}' execution_count=36}\n``` {.python .cell-code}\nslave_voyages_df.groupby('national_affiliation')['percent_women'].count()\\\n.sort_values(ascending=False).plot(kind='bar', title='Trans-Atlantic Slave Trade (Americas): \\n Slave Voyages with Recorded Gender Information')\n```\n\n::: {.cell-output .cell-output-display execution_count=36}\n```\n<AxesSubplot:title={'center':'Trans-Atlantic Slave Trade (Americas): \\n Slave Voyages with Recorded Gender Information'}, xlabel='national_affiliation'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](04-Pandas-Basics-Part2_files/figure-html/cell-37-output-2.png){}\n:::\n:::\n\n\n## Make Time Series with Groupby\n\nTo make a time series, we would typically want to convert our date column into datetime values rather than integers.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:15.308244Z\",\"start_time\":\"2022-11-07T10:50:15.304523Z\"}' execution_count=37}\n``` {.python .cell-code}\nslave_voyages_df['year_of_arrival'].dtype\n```\n\n::: {.cell-output .cell-output-display execution_count=37}\n```\ndtype('int64')\n```\n:::\n:::\n\n\nDatetime values allow us to do special things that we can't do with regular integers and floats, such as extract just the year, month, week, day, or second from any date or aggregate based on any of the above.\n\nHowever, we can also make some simple time series plots just by grouping by the year column and performing calculations on those year groupings, such as calculating the average percentage of enslaved women aboard the voyages over time.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:15.470746Z\",\"start_time\":\"2022-11-07T10:50:15.462240Z\"}' execution_count=38}\n``` {.python .cell-code}\nslave_voyages_df.groupby('year_of_arrival')['total_women'].sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=38}\n```\nyear_of_arrival\n1520    0.0\n1525    0.0\n1526    0.0\n1527    0.0\n1532    0.0\n       ... \n1862    0.0\n1863    0.0\n1864    0.0\n1865    0.0\n1866    0.0\nName: total_women, Length: 330, dtype: float64\n```\n:::\n:::\n\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:15.687648Z\",\"start_time\":\"2022-11-07T10:50:15.681754Z\"}' execution_count=39}\n``` {.python .cell-code}\ntotal_women_by_year = slave_voyages_df.groupby('year_of_arrival')['total_women'].sum()\n```\n:::\n\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:16.050750Z\",\"start_time\":\"2022-11-07T10:50:15.935497Z\"}' execution_count=40}\n``` {.python .cell-code}\ntotal_women_by_year.plot()\n```\n\n::: {.cell-output .cell-output-display execution_count=40}\n```\n<AxesSubplot:xlabel='year_of_arrival'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](04-Pandas-Basics-Part2_files/figure-html/cell-41-output-2.png){}\n:::\n:::\n\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:16.577055Z\",\"start_time\":\"2022-11-07T10:50:16.452274Z\"}' execution_count=41}\n``` {.python .cell-code}\ntotal_women_by_year.plot(kind='line', title=\"Trans-Atlantic Slave Trade (Americas):\\nTotal Number of Enslaved Women on Voyages\")\n```\n\n::: {.cell-output .cell-output-display execution_count=41}\n```\n<AxesSubplot:title={'center':'Trans-Atlantic Slave Trade (Americas):\\nTotal Number of Enslaved Women on Voyages'}, xlabel='year_of_arrival'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](04-Pandas-Basics-Part2_files/figure-html/cell-42-output-2.png){}\n:::\n:::\n\n\nWe can put different plots on the same axes by assigning one of the plots to the variable `ax`, short for axes, and then using `ax=ax` in the other plot to explicitly put it on the same axes.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:17.070975Z\",\"start_time\":\"2022-11-07T10:50:17.060694Z\"}' execution_count=42}\n``` {.python .cell-code}\ntotal_men_by_year = slave_voyages_df.groupby('year_of_arrival')['total_men'].sum()\n```\n:::\n\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:17.366696Z\",\"start_time\":\"2022-11-07T10:50:17.213634Z\"}' execution_count=43}\n``` {.python .cell-code}\nax = total_women_by_year.plot(kind='line', legend= True,\n                              title=\"Trans-Atlantic Slave Trade (Americas):\\nTotal Number of Enslaved Women on Voyages\")\ntotal_men_by_year.plot(ax=ax, legend=True)\n```\n\n::: {.cell-output .cell-output-display execution_count=43}\n```\n<AxesSubplot:title={'center':'Trans-Atlantic Slave Trade (Americas):\\nTotal Number of Enslaved Women on Voyages'}, xlabel='year_of_arrival'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](04-Pandas-Basics-Part2_files/figure-html/cell-44-output-2.png){}\n:::\n:::\n\n\nWe can change the labels in a legend by using the `label=` parameter.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:17.932909Z\",\"start_time\":\"2022-11-07T10:50:17.783953Z\"}' execution_count=44}\n``` {.python .cell-code}\nax = total_women_by_year.plot(kind='line', label=\"Total Women\", legend= True, title=\"Trans-Atlantic Slave Trade (Americas):\\nTotal Number of Enslaved Women on Voyages\")\ntotal_men_by_year.plot(ax=ax, label=\"Total Men\", legend=True)\n```\n\n::: {.cell-output .cell-output-display execution_count=44}\n```\n<AxesSubplot:title={'center':'Trans-Atlantic Slave Trade (Americas):\\nTotal Number of Enslaved Women on Voyages'}, xlabel='year_of_arrival'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](04-Pandas-Basics-Part2_files/figure-html/cell-45-output-2.png){}\n:::\n:::\n\n\nFinally, we can also add in the total number of enslaved people who embarked on the voyages, offering a perspective of how much gender information we have about the voyages compared to the total number of voyages.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:18.183125Z\",\"start_time\":\"2022-11-07T10:50:18.179078Z\"}' execution_count=45}\n``` {.python .cell-code}\ntotal_embarked_by_year = slave_voyages_df.groupby('year_of_arrival')['total_embarked'].sum()\n```\n:::\n\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:18.596245Z\",\"start_time\":\"2022-11-07T10:50:18.435835Z\"}' execution_count=46}\n``` {.python .cell-code}\nax = total_women_by_year.plot(kind='line', label=\"Total Women\", legend= True, title=\"Trans-Atlantic Slave Trade (Americas):\\nTotal Number of Enslaved Women on Voyages\")\ntotal_men_by_year.plot(ax=ax, label=\"Total Men\", legend=True)\ntotal_embarked_by_year.plot(ax=ax, label=\"Total Embarked\", legend=True)\n```\n\n::: {.cell-output .cell-output-display execution_count=46}\n```\n<AxesSubplot:title={'center':'Trans-Atlantic Slave Trade (Americas):\\nTotal Number of Enslaved Women on Voyages'}, xlabel='year_of_arrival'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](04-Pandas-Basics-Part2_files/figure-html/cell-47-output-2.png){}\n:::\n:::\n\n\n## Save Plots\n\nTo save a plot as an image file or PDF file, we can again assign the plot to a variable called `ax`, short for axes.\n\nThen we can use `ax.figure.savefig('FILE-NAME.png')` or `ax.figure.savefig('FILE-NAME.pdf')`.\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:19.280706Z\",\"start_time\":\"2022-11-07T10:50:19.051848Z\"}' execution_count=47}\n``` {.python .cell-code}\nax = total_women_by_year.plot(kind='line', label=\"Total Women\", legend= True, title=\"Trans-Atlantic Slave Trade (Americas):\\nTotal Number of Enslaved Women on Voyages\")\ntotal_men_by_year.plot(ax=ax, label=\"Total Men\", legend=True)\ntotal_embarked_by_year.plot(ax=ax, label=\"Total Embarked\", legend=True)\n\nax.figure.savefig('Trans-Atlantic-Slave-Trade_Gender-Info.png')\n```\n\n::: {.cell-output .cell-output-display}\n![](04-Pandas-Basics-Part2_files/figure-html/cell-48-output-1.png){}\n:::\n:::\n\n\n## Prevent Labels From Getting Cut Off\n\nIf labels are getting cut off in your image, you can explicitly import `matplotlib.pyplot` (the data viz Python library that Pandas `.plot()`s are built on) and use the `tight_layout()` function:\n\n::: {.cell ExecuteTime='{\"end_time\":\"2022-11-07T10:50:19.902639Z\",\"start_time\":\"2022-11-07T10:50:19.699218Z\"}' execution_count=48}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n\nax = total_women_by_year.plot(kind='line', label=\"Total Women\", legend= True, title=\"Trans-Atlantic Slave Trade (Americas):\\nTotal Number of Enslaved Women on Voyages\")\ntotal_men_by_year.plot(ax=ax, label=\"Total Men\", legend=True)\ntotal_embarked_by_year.plot(ax=ax, label=\"Total Embarked\", legend=True)\n\nplt.tight_layout()\nax.figure.savefig('Trans-Atlantic-Slave-Trade_Gender-Info.png')\n```\n\n::: {.cell-output .cell-output-display}\n![](04-Pandas-Basics-Part2_files/figure-html/cell-49-output-1.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "04-Pandas-Basics-Part2_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}